[{"C:\\Users\\User\\react\\homeapp\\src\\index.js":"1","C:\\Users\\User\\react\\homeapp\\src\\App.js":"2","C:\\Users\\User\\react\\homeapp\\src\\reportWebVitals.js":"3","C:\\Users\\User\\react\\homeapp\\src\\model\\UserModel.js":"4","C:\\Users\\User\\react\\homeapp\\src\\pages\\HomePage\\HomePage.js":"5","C:\\Users\\User\\react\\homeapp\\src\\pages\\LoginPage\\LoginPage.js":"6","C:\\Users\\User\\react\\homeapp\\src\\pages\\RecipesPage\\RecipesPage.js":"7","C:\\Users\\User\\react\\homeapp\\src\\pages\\SignupPage\\SignupPage.js":"8","C:\\Users\\User\\react\\homeapp\\src\\pages\\UsersPage\\UsersPage.js":"9","C:\\Users\\User\\react\\homeapp\\src\\components\\AppNavbar\\AppNavbr.js":"10","C:\\Users\\User\\react\\homeapp\\src\\components\\NewUserModal\\NewUserModal.js":"11","C:\\Users\\User\\react\\homeapp\\src\\components\\UserCard\\UserCard.js":"12","C:\\Users\\User\\react\\homeapp\\src\\pages\\MessagesPage\\MessagesPage.js":"13","C:\\Users\\User\\react\\homeapp\\src\\model\\MessageModel.js":"14","C:\\Users\\User\\react\\homeapp\\src\\components\\MessageCard\\MessageCard.js":"15","C:\\Users\\User\\react\\homeapp\\src\\pages\\VotingsPage\\VotingsPage.js":"16","C:\\Users\\User\\react\\homeapp\\src\\model\\VotingModel.js":"17","C:\\Users\\User\\react\\homeapp\\src\\components\\VotingCard\\VotingCard.js":"18","C:\\Users\\User\\react\\homeapp\\src\\components\\NewVotingModal\\NewVotingModal.js":"19","C:\\Users\\User\\react\\buildman\\src\\index.js":"20","C:\\Users\\User\\react\\buildman\\src\\reportWebVitals.js":"21","C:\\Users\\User\\react\\buildman\\src\\App.js":"22","C:\\Users\\User\\react\\buildman\\src\\model\\UserModel.js":"23","C:\\Users\\User\\react\\buildman\\src\\pages\\LoginPage\\LoginPage.js":"24","C:\\Users\\User\\react\\buildman\\src\\pages\\HomePage\\HomePage.js":"25","C:\\Users\\User\\react\\buildman\\src\\pages\\SignupPage\\SignupPage.js":"26","C:\\Users\\User\\react\\buildman\\src\\pages\\VotingsPage\\VotingsPage.js":"27","C:\\Users\\User\\react\\buildman\\src\\pages\\MessagesPage\\MessagesPage.js":"28","C:\\Users\\User\\react\\buildman\\src\\pages\\UsersPage\\UsersPage.js":"29","C:\\Users\\User\\react\\buildman\\src\\model\\MessageModel.js":"30","C:\\Users\\User\\react\\buildman\\src\\model\\VotingModel.js":"31","C:\\Users\\User\\react\\buildman\\src\\components\\MessageCard\\MessageCard.js":"32","C:\\Users\\User\\react\\buildman\\src\\components\\AppNavbar\\AppNavbr.js":"33","C:\\Users\\User\\react\\buildman\\src\\components\\VotingCard\\VotingCard.js":"34","C:\\Users\\User\\react\\buildman\\src\\components\\NewVotingModal\\NewVotingModal.js":"35","C:\\Users\\User\\react\\buildman\\src\\components\\NewUserModal\\NewUserModal.js":"36","C:\\Users\\User\\react\\buildman\\src\\components\\UserCard\\UserCard.js":"37"},{"size":858,"mtime":1610542652824,"results":"38","hashOfConfig":"39"},{"size":1740,"mtime":1611138039734,"results":"40","hashOfConfig":"39"},{"size":375,"mtime":1610363235234,"results":"41","hashOfConfig":"39"},{"size":379,"mtime":1610718845092,"results":"42","hashOfConfig":"39"},{"size":23104,"mtime":1611485179781,"results":"43","hashOfConfig":"39"},{"size":2454,"mtime":1611236256866,"results":"44","hashOfConfig":"39"},{"size":2467,"mtime":1610530531520,"results":"45","hashOfConfig":"46"},{"size":5128,"mtime":1611414969054,"results":"47","hashOfConfig":"39"},{"size":3838,"mtime":1611486591064,"results":"48","hashOfConfig":"39"},{"size":1618,"mtime":1611481504643,"results":"49","hashOfConfig":"39"},{"size":2740,"mtime":1611507113924,"results":"50","hashOfConfig":"39"},{"size":480,"mtime":1611480476636,"results":"51","hashOfConfig":"39"},{"size":4109,"mtime":1611506735492,"results":"52","hashOfConfig":"39"},{"size":463,"mtime":1611492936629,"results":"53","hashOfConfig":"39"},{"size":1270,"mtime":1611506570092,"results":"54","hashOfConfig":"39"},{"size":3073,"mtime":1611491875858,"results":"55","hashOfConfig":"39"},{"size":492,"mtime":1611219146745,"results":"56","hashOfConfig":"39"},{"size":3687,"mtime":1611491317998,"results":"57","hashOfConfig":"39"},{"size":2242,"mtime":1611416504880,"results":"58","hashOfConfig":"39"},{"size":858,"mtime":1611581358634,"results":"59","hashOfConfig":"60"},{"size":375,"mtime":1611581358647,"results":"61","hashOfConfig":"60"},{"size":1740,"mtime":1611587986394,"results":"62","hashOfConfig":"60"},{"size":379,"mtime":1611581358636,"results":"63","hashOfConfig":"60"},{"size":2454,"mtime":1611581358641,"results":"64","hashOfConfig":"60"},{"size":23104,"mtime":1611581358640,"results":"65","hashOfConfig":"60"},{"size":5128,"mtime":1611581358645,"results":"66","hashOfConfig":"60"},{"size":3073,"mtime":1611581358647,"results":"67","hashOfConfig":"60"},{"size":4109,"mtime":1611581358642,"results":"68","hashOfConfig":"60"},{"size":3838,"mtime":1611581358646,"results":"69","hashOfConfig":"60"},{"size":463,"mtime":1611581358636,"results":"70","hashOfConfig":"60"},{"size":492,"mtime":1611581358637,"results":"71","hashOfConfig":"60"},{"size":1270,"mtime":1611581358630,"results":"72","hashOfConfig":"60"},{"size":1618,"mtime":1611581358630,"results":"73","hashOfConfig":"60"},{"size":3687,"mtime":1611581358633,"results":"74","hashOfConfig":"60"},{"size":2242,"mtime":1611581358632,"results":"75","hashOfConfig":"60"},{"size":2740,"mtime":1611581358632,"results":"76","hashOfConfig":"60"},{"size":480,"mtime":1611581358633,"results":"77","hashOfConfig":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qcwuec",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"zw1j2u",{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},"1dmxpv9",{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"119"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"119"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"119"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"119"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"119"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},"C:\\Users\\User\\react\\homeapp\\src\\index.js",[],"C:\\Users\\User\\react\\homeapp\\src\\App.js",[],"C:\\Users\\User\\react\\homeapp\\src\\reportWebVitals.js",[],"C:\\Users\\User\\react\\homeapp\\src\\model\\UserModel.js",[],"C:\\Users\\User\\react\\homeapp\\src\\pages\\HomePage\\HomePage.js",[],"C:\\Users\\User\\react\\homeapp\\src\\pages\\LoginPage\\LoginPage.js",["160","161"],"C:\\Users\\User\\react\\homeapp\\src\\pages\\RecipesPage\\RecipesPage.js",[],["162","163"],"C:\\Users\\User\\react\\homeapp\\src\\pages\\SignupPage\\SignupPage.js",["164","165"],"C:\\Users\\User\\react\\homeapp\\src\\pages\\UsersPage\\UsersPage.js",[],"C:\\Users\\User\\react\\homeapp\\src\\components\\AppNavbar\\AppNavbr.js",[],"C:\\Users\\User\\react\\homeapp\\src\\components\\NewUserModal\\NewUserModal.js",[],"C:\\Users\\User\\react\\homeapp\\src\\components\\UserCard\\UserCard.js",[],"C:\\Users\\User\\react\\homeapp\\src\\pages\\MessagesPage\\MessagesPage.js",["166"],"C:\\Users\\User\\react\\homeapp\\src\\model\\MessageModel.js",[],"C:\\Users\\User\\react\\homeapp\\src\\components\\MessageCard\\MessageCard.js",["167","168","169"],"C:\\Users\\User\\react\\homeapp\\src\\pages\\VotingsPage\\VotingsPage.js",[],"C:\\Users\\User\\react\\homeapp\\src\\model\\VotingModel.js",[],"C:\\Users\\User\\react\\homeapp\\src\\components\\VotingCard\\VotingCard.js",["170","171"],"C:\\Users\\User\\react\\homeapp\\src\\components\\NewVotingModal\\NewVotingModal.js",[],"C:\\Users\\User\\react\\buildman\\src\\index.js",[],["172","173"],"C:\\Users\\User\\react\\buildman\\src\\reportWebVitals.js",[],"C:\\Users\\User\\react\\buildman\\src\\App.js",[],"C:\\Users\\User\\react\\buildman\\src\\model\\UserModel.js",[],"C:\\Users\\User\\react\\buildman\\src\\pages\\LoginPage\\LoginPage.js",["174","175"],"import { useState } from \"react\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport './LoginPage.css';\r\nimport Parse from 'parse';\r\nimport UserModel from \"../../model/UserModel\";\r\nimport AppNavbr from \"../../components/AppNavbar/AppNavbr\";\r\n\r\nfunction LoginPage(props) {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [pwd, setPwd] = useState(\"\");\r\n    const [showLoginError, setShowLoginError] = useState(false);\r\n    const [redirectToUsers, setRedirectToUsers] = useState(false);\r\n    const { activeUser, onLogin } = props;\r\n\r\n    async function login() {\r\n\r\n        try {\r\n            const parseUser = await Parse.User.logIn(email, pwd);\r\n            // Trigger onLogin event prop + update redirect state so we will redirect to recipes page\r\n            onLogin(new UserModel(parseUser));\r\n            setRedirectToUsers(true);\r\n        } catch (error) {\r\n            // show an error alert\r\n            console.error('Error while logging in user', error);\r\n            setShowLoginError(true);\r\n        }\r\n    }\r\n\r\n\r\n    if (redirectToUsers) {\r\n        return <Redirect to=\"/users\" />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"p-login \">\r\n                <br></br>\r\n                <br></br>\r\n                <Link  to=\"/\"> <h2 className=\"text-center\">Login to HOA Systems</h2></Link>\r\n\r\n                <p className=\"text-center\">or <Link to=\"/signup\">create an account</Link></p>\r\n                {showLoginError ? <Alert variant=\"danger\">Invalid Credentials!</Alert> : null}\r\n                <Form>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={e => setEmail(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" value={pwd} onChange={e => setPwd(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Button className=\"mt-5\" variant=\"success\" type=\"button\" block onClick={login}>\r\n                        Login\r\n                </Button>\r\n                </Form>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default LoginPage;","C:\\Users\\User\\react\\buildman\\src\\pages\\HomePage\\HomePage.js",[],"C:\\Users\\User\\react\\buildman\\src\\pages\\SignupPage\\SignupPage.js",["176","177"],"import { useState } from \"react\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Parse from 'parse';\r\nimport UserModel from \"../../model/UserModel\";\r\n\r\nfunction SignupPage(props) {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [pwd, setPwd] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [street, setStreet] = useState(\"\");\r\n    const [number, setNumber] = useState(\"\");\r\n    const [apartment, setApartment] = useState(\"\");\r\n    const [buildingId, setSetBuildingId] = useState(\"\");\r\n\r\n    const [showSignupError, setShowSignupError] = useState(false);\r\n    const [redirectToUsers, setRedirectToUsers] = useState(false);\r\n    const {  onLogin } = props;\r\n\r\n\r\n    async function Signup() {\r\n        // Create a new instance of the building class\r\n        const Building = await Parse.Object.extend('building');\r\n        const building = new Building();\r\n        building.set('city', city);\r\n        building.set('street', street);\r\n        building.set('number', number);\r\n        const newBuilding = await building.save();\r\n        //ask at Nir about this\r\n\r\n        // Create a new instance of the user class\r\n        const user = new Parse.User();\r\n        user.set(\"username\", username);\r\n        user.set(\"password\", pwd);\r\n        user.set(\"email\", email);\r\n        user.set(\"isAdmin\", true);\r\n        user.set(\"buildingId\", building.id);\r\n        setSetBuildingId(building.id)\r\n        user.set(\"apartment\", apartment);\r\n        try {\r\n            const parseUser = await user.signUp()\r\n            onLogin(new UserModel(parseUser));\r\n            setRedirectToUsers(true);\r\n        } catch (error) {\r\n            setShowSignupError(true);\r\n            const building = Parse.Object.extend('building');\r\n            const query = new Parse.Query(building);\r\n            // here you put the objectId that you want to delete\r\n            const object = await query.get(buildingId);\r\n            const response = await object.destroy();\r\n                }\r\n    }\r\n\r\n    if (redirectToUsers) {\r\n        return <Redirect to=\"/users\" />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"p-login\" >\r\n                <Link to=\"/\"> <h2 className=\"text-center\">Sign up to HOA Systems</h2></Link>\r\n\r\n                {showSignupError ? <Alert variant=\"danger\">Invalid Credentials!</Alert> : null}\r\n                <Form>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={e => setEmail(e.target.value)} required />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" value={pwd} onChange={e => setPwd(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicUsername\">\r\n                        <Form.Label>User Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"user Name\" value={username} onChange={e => setUsername(e.target.value)} />\r\n                    </Form.Group>\r\n                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                        <Form.Group controlId=\"formBasicUserCity\">\r\n                            <Form.Label>City</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"City\" value={city} onChange={e => setCity(e.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicUserStreet\">\r\n                            <Form.Label>Street</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Street\" value={street} onChange={e => setStreet(e.target.value)} />\r\n                        </Form.Group>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-between align-items-center\">\r\n\r\n\r\n                        <Form.Group controlId=\"formBasicUserHomeNumber\">\r\n                            <Form.Label>Building number</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Building number\" value={number} onChange={e => setNumber(e.target.value)} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicUserHomeNumber\">\r\n                            <Form.Label>Apartment number</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Apartment number\" value={apartment} onChange={e => setApartment(e.target.value)} />\r\n                        </Form.Group>\r\n                    </div>\r\n                    <Button variant=\"success\" type=\"button\" block onClick={Signup}>\r\n                        Sign up\r\n                </Button>\r\n                </Form>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default SignupPage;","C:\\Users\\User\\react\\buildman\\src\\pages\\VotingsPage\\VotingsPage.js",[],"C:\\Users\\User\\react\\buildman\\src\\pages\\MessagesPage\\MessagesPage.js",["178"],"import React, { useState, useEffect } from 'react'\r\nimport AppNavbr from \"../../components/AppNavbar/AppNavbr\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Parse from 'parse';\r\nimport { Container, Form, FormControl, Button, Accordion     } from \"react-bootstrap\";\r\nimport MessageModel from '../../model/MessageModel';\r\nimport MessageCard from '../../components/MessageCard/MessageCard';\r\n\r\nfunction MessagesPage(props) {\r\n    const { activeUser, onLogout } = props;\r\n    const [messages, setMessages] = useState([]);\r\n    const [messageText, setMessageText] = useState(\"\");\r\n\r\n\r\n    //fetching messages from parse\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const ParseMessage = Parse.Object.extend('message');\r\n            const query = new Parse.Query(ParseMessage);\r\n            query.equalTo(\"buildingId\", activeUser.buildingId);\r\n            const ParseMessages = await query.find();\r\n            setMessages(ParseMessages.map(parseMessage => new MessageModel(parseMessage)));\r\n        }\r\n\r\n        if (activeUser) {\r\n            fetchData()\r\n        }\r\n    }, [activeUser])\r\n\r\n    //adding new message\r\n    async function addMessage(message) {\r\n        const ParseMessage = Parse.Object.extend('message');\r\n        const newMessage = new ParseMessage();\r\n        newMessage.set('title', messageText);\r\n        newMessage.set('createdBy', activeUser.id);\r\n        newMessage.set('creatorName', activeUser.username);\r\n        newMessage.set('buildingId', activeUser.buildingId);\r\n        newMessage.set('seen', []);\r\n\r\n\r\n        const parseMessage = await newMessage.save();\r\n        setMessageText(\"\")\r\n        setMessages(messages.concat(new MessageModel(newMessage)));\r\n    }\r\n/* \r\n    const onClickAcordion = (message, userId) =>{\r\n     if (!message.seen.includes(userId)){\r\n        const message = Parse.Object.extend('message');\r\n        const query = new Parse.Query(message);\r\n        // here you put the objectId that you want to update\r\n        query.get('xKue915KBG').then((object) => {\r\n          object.set('seen', message.seen.concat(userId));\r\n          object.save().then((response) => {\r\n            // You can use the \"get\" method to get the value of an attribute\r\n            // Ex: response.get(\"<ATTRIBUTE_NAME>\")\r\n            if (typeof document !== 'undefined') document.write(`Updated message: ${JSON.stringify(response)}`);\r\n            console.log('Updated message', response);\r\n          }, (error) => {\r\n            if (typeof document !== 'undefined') document.write(`Error while updating message: ${JSON.stringify(error)}`);\r\n            console.error('Error while updating message', error);\r\n          });\r\n        });\r\n        message.seen = message.seen.concat(userId);\r\n\r\n        // 1) Duplicate message object\r\n        const updatedMessage = {...message};\r\n    \r\n        // 2) find index of message\r\n         const index = messages.indexOf(message);\r\n    \r\n        // 3) replace the object in the above index with the updatedMessage\r\n        messages[index] = updatedMessage;\r\n    \r\n         setMessages([...messages]);\r\n        \r\n     }\r\n    }\r\n     */\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n\r\n    //messages view \r\n    const messagesView = messages.map((message, index) => <MessageCard key={message.id} message={message} user={activeUser} index={index} />)\r\n\r\n    return (\r\n        <div>\r\n            <AppNavbr activeUser={activeUser} onLogout={onLogout} />\r\n\r\n            <Container style={{marginTop: \"90px\"}}> \r\n            <Form className=\" w-100 mb-5 mt-5 \" inline>\r\n                <FormControl\r\n                    className=\" w-50\"\r\n                    type=\"text\"\r\n                    placeholder=\"Write your message ....\"\r\n                    value={messageText}\r\n                    onChange={e => setMessageText(e.target.value)} />\r\n                <Button className=\"ml-5\" variant=\"warning\" onClick={addMessage}>Send</Button>\r\n            </Form>\r\n\r\n           <Accordion>{messagesView}</Accordion> \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\nexport default MessagesPage\r\n","C:\\Users\\User\\react\\buildman\\src\\pages\\UsersPage\\UsersPage.js",[],"C:\\Users\\User\\react\\buildman\\src\\model\\MessageModel.js",[],"C:\\Users\\User\\react\\buildman\\src\\model\\VotingModel.js",[],"C:\\Users\\User\\react\\buildman\\src\\components\\MessageCard\\MessageCard.js",["179","180","181"],"import React from 'react';\r\nimport { Accordion, Card, Button } from \"react-bootstrap\";\r\nimport AnnouncementIcon from '@material-ui/icons/Announcement';\r\nimport SpeakerNotesOffIcon from '@material-ui/icons/SpeakerNotesOff';\r\n\r\nfunction MessageCard(props) {\r\n    const { message, index, user, callback } = props;\r\n    \r\n\r\n    return (\r\n        <div className=\"animate-falldown mt-3\">\r\n            <Card >\r\n                <Accordion.Toggle \r\n                 as={Card.Header}\r\n                 className=\"d-flex justify-content-between align-items-center\" \r\n                 eventKey={message.id} \r\n                  \r\n                >\r\n                    {message.creatorName}\r\n                    \r\n                   {message.seen.includes(user.id)? <SpeakerNotesOffIcon/> : <AnnouncementIcon color=\"secondary\"/> }\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey={message.id} >\r\n                    <Card.Body  className=\"d-flex justify-content-between align-items-center\">{message.title}\r\n                        <Card.Text>{message.createdAt.toString().slice(4, 10)}</Card.Text>\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageCard\r\n","C:\\Users\\User\\react\\buildman\\src\\components\\AppNavbar\\AppNavbr.js",[],"C:\\Users\\User\\react\\buildman\\src\\components\\VotingCard\\VotingCard.js",["182","183"],"import React, { useEffect, useState } from 'react';\r\nimport { Card, Col, Row, Button ,Accordion} from 'react-bootstrap';\r\nimport { Chart } from \"react-google-charts\";\r\nimport Parse from 'parse';\r\n\r\nfunction VotingCard (props) {\r\n    const { user, voting, callback } = props;\r\n    const [voted, setVoted] = useState(false)\r\n    \r\n\r\n\r\n \r\n    const inFovor = async () => {\r\n        const MyCustomClass = await Parse.Object.extend('voiting');\r\n        const query = new Parse.Query(MyCustomClass);\r\n        // here you put the objectId that you want to update\r\n         const parseVoting = await query.get(voting.id);\r\n        const votesArray = voting.votes.concat({\"voteBy\": user.id, \"vote\": \"in fovor\"});\r\n         parseVoting.set('votes', votesArray);\r\n         const updatedParseVoting = await parseVoting.save();\r\n         setVoted(true);\r\n         console.log(updatedParseVoting);\r\n         callback(voting, votesArray)\r\n    }\r\n   \r\n   \r\n\r\n    \r\n    const against = async () =>{ \r\n        const MyCustomClass =  Parse.Object.extend('voiting');\r\n        const query = new Parse.Query(MyCustomClass);\r\n        // here you put the objectId that you want to update\r\n         const parseVoting = await query.get(voting.id);\r\n         parseVoting.set('votes', voting.votes.concat({\"voteBy\": user.id, \"vote\": \"against\"}));\r\n         const updatedParseVoting = await parseVoting.save();\r\n         setVoted(true);\r\n         console.log(updatedParseVoting);\r\n        }\r\n\r\n    return (\r\n        <div className=\"animate-falldown\" >\r\n            <Card>\r\n            <Accordion.Toggle as={Card.Header} eventKey={voting.id}  className=\"d-flex justify-content-between align-items-center\">\r\n            {voting.title}\r\n                   {/*  <AccessAlarmIcon/> */}\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey={voting.id}>\r\n                    <Card.Body  className=\"d-flex justify-content-between align-items-center\">\r\n                    <Row>\r\n                        <p className=\"p-2\">{voting.details}</p>\r\n\r\n                        <Col className=\"d-flex justify-content-center align-items-center\" >\r\n                           <Chart\r\n                                width={'200px'}\r\n                                height={'200px'}\r\n                                chartType=\"PieChart\"\r\n                                loader={<div>Loading Chart</div>}\r\n                                data={[\r\n                                    ['Task', 'Hours per Day'],\r\n                                    ['In Fovor', voting.votes.filter(vote => vote.vote === \"in fovor\").length],\r\n                                    ['Against', voting.votes.filter(vote => vote.vote === \"against\").length],\r\n\r\n                                ]}\r\n                                options={{\r\n                                    title: voting.title,\r\n                                }}\r\n                                rootProps={{ 'data-testid': '1' }}\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                        {voting.votes.filter(vote => vote.voteBy === user.id).length ? <h3 >Thank you for your vote.</h3> :\r\n                            <div>\r\n                                <Button className=\"m-4\" variant=\"primary\" onClick={inFovor}>In Fovor</Button>\r\n                                <Button className=\"m-4\" variant=\"danger\" onClick={against}>Against</Button>\r\n                            </div>}\r\n                            </Col>\r\n                    </Row>\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VotingCard\r\n","C:\\Users\\User\\react\\buildman\\src\\components\\NewVotingModal\\NewVotingModal.js",[],"C:\\Users\\User\\react\\buildman\\src\\components\\NewUserModal\\NewUserModal.js",[],["184","185"],"C:\\Users\\User\\react\\buildman\\src\\components\\UserCard\\UserCard.js",[],{"ruleId":"186","severity":1,"message":"187","line":7,"column":8,"nodeType":"188","messageId":"189","endLine":7,"endColumn":16},{"ruleId":"186","severity":1,"message":"190","line":14,"column":13,"nodeType":"188","messageId":"189","endLine":14,"endColumn":23},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"186","severity":1,"message":"195","line":29,"column":15,"nodeType":"188","messageId":"189","endLine":29,"endColumn":26},{"ruleId":"186","severity":1,"message":"196","line":51,"column":19,"nodeType":"188","messageId":"189","endLine":51,"endColumn":27},{"ruleId":"186","severity":1,"message":"197","line":41,"column":15,"nodeType":"188","messageId":"189","endLine":41,"endColumn":27},{"ruleId":"186","severity":1,"message":"198","line":2,"column":27,"nodeType":"188","messageId":"189","endLine":2,"endColumn":33},{"ruleId":"186","severity":1,"message":"199","line":7,"column":22,"nodeType":"188","messageId":"189","endLine":7,"endColumn":27},{"ruleId":"186","severity":1,"message":"200","line":7,"column":35,"nodeType":"188","messageId":"189","endLine":7,"endColumn":43},{"ruleId":"186","severity":1,"message":"201","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"186","severity":1,"message":"202","line":8,"column":12,"nodeType":"188","messageId":"189","endLine":8,"endColumn":17},{"ruleId":"191","replacedBy":"203"},{"ruleId":"193","replacedBy":"204"},{"ruleId":"186","severity":1,"message":"187","line":7,"column":8,"nodeType":"188","messageId":"189","endLine":7,"endColumn":16},{"ruleId":"186","severity":1,"message":"190","line":14,"column":13,"nodeType":"188","messageId":"189","endLine":14,"endColumn":23},{"ruleId":"186","severity":1,"message":"195","line":29,"column":15,"nodeType":"188","messageId":"189","endLine":29,"endColumn":26},{"ruleId":"186","severity":1,"message":"196","line":51,"column":19,"nodeType":"188","messageId":"189","endLine":51,"endColumn":27},{"ruleId":"186","severity":1,"message":"197","line":41,"column":15,"nodeType":"188","messageId":"189","endLine":41,"endColumn":27},{"ruleId":"186","severity":1,"message":"198","line":2,"column":27,"nodeType":"188","messageId":"189","endLine":2,"endColumn":33},{"ruleId":"186","severity":1,"message":"199","line":7,"column":22,"nodeType":"188","messageId":"189","endLine":7,"endColumn":27},{"ruleId":"186","severity":1,"message":"200","line":7,"column":35,"nodeType":"188","messageId":"189","endLine":7,"endColumn":43},{"ruleId":"186","severity":1,"message":"201","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"186","severity":1,"message":"202","line":8,"column":12,"nodeType":"188","messageId":"189","endLine":8,"endColumn":17},{"ruleId":"191","replacedBy":"205"},{"ruleId":"193","replacedBy":"206"},"no-unused-vars","'AppNavbr' is defined but never used.","Identifier","unusedVar","'activeUser' is assigned a value but never used.","no-native-reassign",["207"],"no-negated-in-lhs",["208"],"'newBuilding' is assigned a value but never used.","'response' is assigned a value but never used.","'parseMessage' is assigned a value but never used.","'Button' is defined but never used.","'index' is assigned a value but never used.","'callback' is assigned a value but never used.","'useEffect' is defined but never used.","'voted' is assigned a value but never used.",["207"],["208"],["207"],["208"],"no-global-assign","no-unsafe-negation"]